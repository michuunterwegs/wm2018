<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Core\Router" namespace="Core" name="Router" abstract="false" final="false" start="10" end="168">
  <file path="H:/XAMPP/htdocs/app/Core" file="Router.php" realpath="H:/XAMPP/htdocs/app/Core/Router.php" size="4642" time="2018-05-21T10:01:40+00:00" unixtime="1526896900" sha1="e150d1f815bac2b6a9931dbc6002c40596729a85" relative="Core/Router.php"/>
  <docblock>
    <description compact="Routes the http request and calls the matching controller/action method">PHP version 7.0</description>
  </docblock>
  <member name="request" default="NULL" visibility="protected" static="false" line="16">
    <docblock>
      <description compact="Request"/>
      <var type="object">
        <type full="Core\Request" namespace="Core" name="Request"/>
      </var>
    </docblock>
  </member>
  <member name="routes" default="" type="array" visibility="protected" static="false" line="22">
    <docblock>
      <description compact="Associative array of routes (the routing table)"/>
      <var type="array"/>
    </docblock>
  </member>
  <method name="add" start="31" end="46" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add a route to the routing table"/>
      <param description="The route URL" type="string" variable="$route"/>
      <param description="Parameters for the route (controller, action, etc.)" type="array" variable="$params"/>
      <return type="object">
        <type full="Core\void" namespace="Core" name="void"/>
      </return>
    </docblock>
    <parameter name="route" byreference="false" type="{unknown}"/>
    <parameter name="params" byreference="false" type="array" default=""/>
    <inline>
      <comment value="Convert the route to a regular expression: escape forward slashes" line="33"/>
      <comment value="Convert variables e.g. {controller}" line="36"/>
      <comment value="Convert variables with custom regular expressions e.g. {id:\d+}" line="39"/>
      <comment value="Add start and end delimiters, and case insensitive flag" line="42"/>
    </inline>
  </method>
  <method name="getRoutes" start="53" end="56" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all the routes from the routing table"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="dispatch" start="65" end="97" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Dispatch the route, creating the controller object and calling the action method"/>
      <param description="Request object" type="object" variable="$request">
        <type full="Core\Request" namespace="Core" name="Request"/>
      </param>
      <return type="object">
        <type full="Core\void" namespace="Core" name="void"/>
      </return>
    </docblock>
    <parameter name="request" byreference="false" type="object">
      <type full="Core\Request" namespace="Core" name="Request"/>
    </parameter>
  </method>
  <method name="match" start="106" end="126" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Match the route to the routes in the routing table, setting the $params property if a route is found."/>
      <param description="The route URL" type="string" variable="$url"/>
      <return description="true if a match found, false otherwise" type="boolean"/>
    </docblock>
    <parameter name="url" byreference="false" type="{unknown}"/>
  </method>
  <method name="convertToStudlyCaps" start="135" end="138" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Convert the string with hyphens to StudlyCaps, e.g. post-authors =&gt; PostAuthors"/>
      <param description="The string to convert" type="string" variable="$string"/>
      <return description="String in studly caps" type="string"/>
    </docblock>
    <parameter name="string" byreference="false" type="{unknown}"/>
  </method>
  <method name="convertToCamelCase" start="147" end="150" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Convert the string with hyphens to camelCase, e.g. add-new =&gt; addNew"/>
      <param description="The string to convert" type="string" variable="$string"/>
      <return description="String in camel case" type="string"/>
    </docblock>
    <parameter name="string" byreference="false" type="{unknown}"/>
  </method>
  <method name="getNamespace" start="158" end="167" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the namespace for the controller class. The namespace defined in the route parameters is added if present."/>
      <return description="The request URL" type="string"/>
    </docblock>
  </method>
</class>
